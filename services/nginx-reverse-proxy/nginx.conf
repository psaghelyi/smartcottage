worker_processes 4;
 
events { 
    worker_connections 8192;
    #accept_mutex on; # "on" if nginx worker_processes > 1
    use epoll;
}

http {
    log_format upstream_time '{"remote_addr": "$remote_addr", "request": "$request", "server_port": $server_port, "status": $status, "body_bytes_sent": $body_bytes_sent, "request_time": $request_time, '
                             '"upstream": {"addr": "$upstream_addr", "status": $upstream_status, "connect_time": $upstream_connect_time, "header_time": $upstream_header_time, "response_time": $upstream_response_time} }';

    access_log /dev/stdout upstream_time;
    
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    include /etc/nginx/conf.d/*.conf;
    
    server {
        listen 88;

        location = /stub_status {
            stub_status;
        }
    }

    server {
        listen 80;
        listen [::]:80;

        server_name psaghelyi.ddns.net;
        server_tokens off;
        
        # Rule for legitimate ACME Challenge requests (like /.well-known/acme-challenge/xxxxxxxxx)
        # We use ^~ here, so that we don't check other regexes (for speed-up). We actually MUST cancel
        # other regex checks, because in our other config files have regex rule that denies access to files with dotted names.
        location ^~ /.well-known/acme-challenge/ {

            # Set correct content type. According to this:
            # https://community.letsencrypt.org/t/using-the-webroot-domain-verification-method/1445/29
            # Current specification requires "text/plain" or no content header at all.
            # It seems that "text/plain" is a safe option.
            default_type "text/plain";

            # This directory must be the same as in /etc/letsencrypt/cli.ini
            # as "webroot-path" parameter. Also don't forget to set "authenticator" parameter
            # there to "webroot".
            # Do NOT use alias, use root! Target directory is located here:
            # /var/www/common/letsencrypt/.well-known/acme-challenge/
            root         /var/www/certbot;
            break;
        }
        
        # Hide /acme-challenge subdirectory and return 404 on all requests.
        # It is somewhat more secure than letting Nginx return 403.
        # Ending slash is important!
        location = /.well-known/acme-challenge/ {
            return 404;
        }

        location / {
            return 301 https://psaghelyi.ddns.net$request_uri;
        }
    }

    server {
        listen 80;
        listen [::]:80;

        server_name askalot.io *.askalot.io;
        server_tokens off;
        
        # Rule for legitimate ACME Challenge requests
        location ^~ /.well-known/acme-challenge/ {
            default_type "text/plain";
            root         /var/www/certbot;
            break;
        }
        
        # Hide /acme-challenge subdirectory and return 404 on all requests
        location = /.well-known/acme-challenge/ {
            return 404;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

}
