worker_processes 1;
 
events { 
    worker_connections 1024;
    #accept_mutex on; # "on" if nginx worker_processes > 1
    use epoll;
}

http {
    log_format upstream_time '$remote_addr "$request $server_port" $status $body_bytes_sent '
                             'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /dev/stdout upstream_time;
    
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    server {
        listen              12345 ssl;
        server_name         psaghelyi.ddns.net;
        ssl_certificate     /etc/nginx/ssl/live/psaghelyi.ddns.net/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/psaghelyi.ddns.net/privkey.pem;

        location / {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://127.0.0.1:8888/;
            proxy_http_version 1.1;
            proxy_set_header "Connection" "";  # remove close

            proxy_connect_timeout 3s;
            #proxy_send_timeout 10s;
            proxy_read_timeout 30s;
            #send_timeout 10s;
        }
    }

    
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen              8123 ssl;
        server_name         psaghelyi.ddns.net;
        ssl_certificate     /etc/nginx/ssl/live/psaghelyi.ddns.net/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/psaghelyi.ddns.net/privkey.pem;

        proxy_buffering off;

        location / {
            proxy_pass http://192.168.192.1:8123/;
            proxy_set_header Host $host;
            proxy_redirect http:// https://;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        location /api/websocket {
            proxy_pass http://192.168.192.1:8123/api/websocket;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

        }
    }

    server {
        listen              443 ssl http2;
        server_name         psaghelyi.ddns.net;
        ssl_certificate     /etc/nginx/ssl/live/psaghelyi.ddns.net/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/psaghelyi.ddns.net/privkey.pem;
        ssl_dhparam         /etc/nginx/dhparam.pem;

        # https://scaron.info/blog/improve-your-nginx-ssl-configuration.html
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;  # drop SSLv3 (POODLE vulnerability)
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';
        add_header Strict-Transport-Security max-age=63072000;
        
        # Allow large attachments
        client_max_body_size 128M;

        location / {
            proxy_pass http://127.0.0.1:8880;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /notifications/hub {
            proxy_pass http://127.0.0.1:3012;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        location /notifications/hub/negotiate {
            proxy_pass http://127.0.0.1:8880;
        }
    }

    server {
        listen              8920 ssl;
        server_name         psaghelyi.ddns.net;
        ssl_certificate     /etc/nginx/ssl/live/psaghelyi.ddns.net/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/psaghelyi.ddns.net/privkey.pem;
        
        # Allow large attachments
        client_max_body_size 20M;

        location / {
            # Proxy main Jellyfin traffic
            proxy_pass http://127.0.0.1:8096;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Protocol $scheme;
            proxy_set_header X-Forwarded-Host $http_host;
        }

        # location block for /web - This is purely for aesthetics so /web/#!/ works instead of having to go to /web/index.html/#!/
        location = /web/ {
            # Proxy main Jellyfin traffic
            proxy_pass http://127.0.0.1:8096/web/index.html;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Protocol $scheme;
            proxy_set_header X-Forwarded-Host $http_host;
        }

        location /socket {
            # Proxy Jellyfin Websockets traffic
            proxy_pass http://127.0.0.1:8096;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Protocol $scheme;
            proxy_set_header X-Forwarded-Host $http_host;
        }

    }

    server {
        listen 88;

        location = /stub_status {
            stub_status;
        }
    }

    server {
        listen 80;
        listen [::]:80;

        server_name         psaghelyi.ddns.net;
        server_tokens off;
        
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        location / {
            return 301 https://psaghelyi.ddns.net$request_uri;
        }
    }

}